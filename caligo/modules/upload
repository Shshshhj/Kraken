# https://github.com/SpEcHiDe/PublicLeech/blob/master/tobrot/helper_funcs/upload_to_tg.py

from hachoir.metadata import extractMetadata
from hachoir.parser import createParser
from PIL import Image

import asyncio

from datetime import datetime, timedelta
from itertools import zip_longest
from pathlib import Path
from typing import ClassVar, Optional, Set, Tuple, Union

from .. import command, module, util

class Misc(module.Module):
    name: ClassVar[str] = "Misc"

    task: Set[Tuple[int, asyncio.Task]]

    async def on_load(self) -> None:
        self.task = set()


    @command.desc("Upload file into telegram server")
    @command.usage("[file path]")
    async def cmd_upload(self, ctx: command.Context) -> Optional[str]:
        if not ctx.input:
            return "__Pass the file path.__"

        before = util.time.sec()

    

